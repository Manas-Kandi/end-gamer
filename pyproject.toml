[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "chess-engine-kp-endgame"
version = "0.1.0"
description = "Neural network-based chess engine specialized in king-pawn endgames using AlphaZero methodology"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Chess Engine KP Team"},
]
keywords = ["chess", "reinforcement-learning", "alphazero", "endgame", "neural-network"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Games/Entertainment :: Board Games",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "python-chess>=1.999",
    "numpy>=1.24.0",
    "tensorboard>=2.13.0",
    "pyyaml>=6.0",
    "h5py>=3.8.0",
    "tqdm>=4.65.0",
    "scipy>=1.10.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "black>=23.3.0",
    "flake8>=6.0.0",
    "mypy>=1.3.0",
]
distributed = [
    "ray[default]>=2.4.0",
]

[project.urls]
Homepage = "https://github.com/your-username/chess-engine-kp-endgame"
Repository = "https://github.com/your-username/chess-engine-kp-endgame"
Issues = "https://github.com/your-username/chess-engine-kp-endgame/issues"

[project.scripts]
chess-train = "src.scripts.train:main"
chess-evaluate = "src.scripts.evaluate:main"
chess-play = "src.scripts.play:main"
chess-analyze = "src.scripts.analyze:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
    "-v"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]